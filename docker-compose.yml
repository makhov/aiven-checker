version: "3"

services:
  test_unit:
    image: golang:1.14
    command: make test-unit
    volumes:
      - .:/app
    working_dir: /app

  test_int:
    image: golang:1.14
    command: make test-int
    volumes:
      - .:/app
    working_dir: /app
    links:
      - postgres
    environment:
      DATABASE_DSN: "host=postgres password=superpassword user=postgres database=postgres"

  test_e2e:
    image: golang:1.14
    command: make test-e2e
    volumes:
      - .:/app
    working_dir: /app
    links:
      - kafka
      - postgres
      - checker
      - writer
    environment:
      DATABASE_DSN: ${DATABASE_DSN}

  wait-infrastructure:
    image: waisbrot/wait
    links:
      - kafka
      - postgres
    environment:
      - TIMEOUT=180
      - TARGETS=kafka:9092, postgres:5432

  checker:
    build: .
    command: /checker
    links:
      - kafka
    volumes:
      - .:/app
    environment:
      DEBUG: "true"
      KAFKA_BROKERS: ${KAFKA_BROKERS} #kafka:9092
      TASKS_FILE_PATH: "/app/tasks.e2e.json"
      CERT_FILE: ${CERT_FILE}
      KEY_FILE: ${KEY_FILE}
      CA_FILE: ${CA_FILE}

  writer:
    build: .
    command: /writer
    links:
      - kafka
      - postgres
    volumes:
      - .:/app
    environment:
      DEBUG: "true"
      KAFKA_BROKERS: ${KAFKA_BROKERS}
      DATABASE_DSN: ${DATABASE_DSN}
      MIGRATIONS_DIR: "/app/migrations"
      CERT_FILE: ${CERT_FILE}
      KEY_FILE: ${KEY_FILE}
      CA_FILE: ${CA_FILE}

  kafka:
    image: blacktop/kafka
    ports:
      - 9092:9092
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_CREATE_TOPICS: check_results:1:1

  postgres:
    image: postgres:12
    environment:
      POSTGRES_PASSWORD: superpassword
